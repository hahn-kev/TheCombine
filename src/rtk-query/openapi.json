{
  "openapi": "3.0.1",
  "info": {
    "title": "BackendFramework",
    "version": "1.0"
  },
  "paths": {
    "/v1/projects/{projectId}/words/{wordId}/audio/download/{fileName}": {
      "get": {
        "tags": [
          "Audio"
        ],
        "operationId": "DownloadAudioFile",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "wordId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/words/{wordId}/audio/upload": {
      "post": {
        "tags": [
          "Audio"
        ],
        "operationId": "UploadAudioFile",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "wordId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File",
                  "FilePath",
                  "Name"
                ],
                "type": "object",
                "properties": {
                  "File": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Name": {
                    "type": "string"
                  },
                  "FilePath": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "File": {
                  "style": "form"
                },
                "Name": {
                  "style": "form"
                },
                "FilePath": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/words/{wordId}/audio/delete/{fileName}": {
      "delete": {
        "tags": [
          "Audio"
        ],
        "operationId": "DeleteAudioFile",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "wordId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/users/{userId}/avatar/download": {
      "get": {
        "tags": [
          "Avatar"
        ],
        "operationId": "DownloadAvatar",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/v1/users/{userId}/avatar/upload": {
      "post": {
        "tags": [
          "Avatar"
        ],
        "operationId": "UploadAvatar",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File",
                  "FilePath",
                  "Name"
                ],
                "type": "object",
                "properties": {
                  "File": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Name": {
                    "type": "string"
                  },
                  "FilePath": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "File": {
                  "style": "form"
                },
                "Name": {
                  "style": "form"
                },
                "FilePath": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v1/banner": {
      "get": {
        "tags": [
          "Banner"
        ],
        "operationId": "GetBanner",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/BannerType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteBanner"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Banner"
        ],
        "operationId": "UpdateBanner",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteBanner"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteBanner"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SiteBanner"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/v1/invite": {
      "put": {
        "tags": [
          "Invite"
        ],
        "operationId": "EmailInviteToProject",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailInviteData"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailInviteData"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmailInviteData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/invite/{projectId}/validate/{token}": {
      "put": {
        "tags": [
          "Invite"
        ],
        "operationId": "ValidateToken",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailInviteStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/lift/upload": {
      "post": {
        "tags": [
          "Lift"
        ],
        "operationId": "UploadLiftFile",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File",
                  "FilePath",
                  "Name"
                ],
                "type": "object",
                "properties": {
                  "File": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Name": {
                    "type": "string"
                  },
                  "FilePath": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "File": {
                  "style": "form"
                },
                "Name": {
                  "style": "form"
                },
                "FilePath": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/lift/export": {
      "get": {
        "tags": [
          "Lift"
        ],
        "operationId": "ExportLiftFile",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/lift/download": {
      "get": {
        "tags": [
          "Lift"
        ],
        "operationId": "DownloadLiftFile",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/lift/deleteexport": {
      "get": {
        "tags": [
          "Lift"
        ],
        "operationId": "DeleteLiftFile",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/lift/check": {
      "get": {
        "tags": [
          "Lift"
        ],
        "operationId": "CanUploadLift",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/merge": {
      "put": {
        "tags": [
          "Merge"
        ],
        "operationId": "MergeWords",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MergeWords"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MergeWords"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MergeWords"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/merge/undo": {
      "put": {
        "tags": [
          "Merge"
        ],
        "operationId": "UndoMerge",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MergeUndoIds"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MergeUndoIds"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MergeUndoIds"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/merge/blacklist/add": {
      "put": {
        "tags": [
          "Merge"
        ],
        "operationId": "BlacklistAdd",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/merge/dups/{maxInList}/{maxLists}/{userId}": {
      "get": {
        "tags": [
          "Merge"
        ],
        "operationId": "GetPotentialDuplicates",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maxInList",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxLists",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Word"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects": {
      "get": {
        "tags": [
          "Project"
        ],
        "operationId": "GetAllProjects",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Project"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Project"
        ],
        "operationId": "DeleteAllProjects",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Project"
        ],
        "operationId": "CreateProject",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Project"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Project"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Project"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCreatedProject"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/users": {
      "get": {
        "tags": [
          "Project"
        ],
        "operationId": "GetAllProjectUsers",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}": {
      "get": {
        "tags": [
          "Project"
        ],
        "operationId": "GetProject",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Project"
        ],
        "operationId": "UpdateProject",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Project"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Project"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Project"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Project"
        ],
        "operationId": "DeleteProject",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v1/projects/{projectId}/characters": {
      "put": {
        "tags": [
          "Project"
        ],
        "operationId": "PutChars",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Project"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Project"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Project"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/duplicate/{projectName}": {
      "get": {
        "tags": [
          "Project"
        ],
        "operationId": "ProjectDuplicateCheck",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/v1/semanticdomain/domainFull": {
      "get": {
        "tags": [
          "SemanticDomain"
        ],
        "operationId": "GetSemanticDomainFull",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lang",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SemanticDomainFull"
                }
              }
            }
          }
        }
      }
    },
    "/v1/semanticdomain/domainTreeNode": {
      "get": {
        "tags": [
          "SemanticDomain"
        ],
        "operationId": "GetSemanticDomainTreeNode",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lang",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SemanticDomainTreeNode"
                }
              }
            }
          }
        }
      }
    },
    "/v1/semanticdomain/domainByName": {
      "get": {
        "tags": [
          "SemanticDomain"
        ],
        "operationId": "GetSemanticDomainTreeNodeByName",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lang",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SemanticDomainTreeNode"
                }
              }
            }
          }
        }
      }
    },
    "/v1/semanticdomain/domainGetAll": {
      "get": {
        "tags": [
          "SemanticDomain"
        ],
        "operationId": "GetAllSemanticDomainTreeNodes",
        "parameters": [
          {
            "name": "lang",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SemanticDomainTreeNode"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/statistics/GetSemanticDomainCounts": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "operationId": "GetSemanticDomainCounts",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lang",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SemanticDomainCount"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/statistics/GetWordsPerDayPerUserCounts": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "operationId": "GetWordsPerDayPerUserCounts",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WordsPerDayPerUserCount"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/statistics/GetProgressEstimationLineChartRoot": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "operationId": "GetProgressEstimationLineChartRoot",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartRootData"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/statistics/GetLineChartRootData": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "operationId": "GetLineChartRootData",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartRootData"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/statistics/GetSemanticDomainUserCounts": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "operationId": "GetSemanticDomainUserCounts",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lang",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SemanticDomainUserCount"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/users/forgot": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "ResetPasswordRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordResetRequestData"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordResetRequestData"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordResetRequestData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v1/users/forgot/reset": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "ResetPassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordResetData"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordResetData"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordResetData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v1/users": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "GetAllUsers",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "CreateUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/users/authenticate": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "Authenticate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Credentials"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Credentials"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Credentials"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/v1/users/{userId}": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "GetUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "operationId": "UpdateUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "operationId": "DeleteUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/users/getemail/{email}": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "GetUserByEmail",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/v1/users/isusernametaken/{username}": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "CheckUsername",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/v1/users/isemailtaken/{email}": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "CheckEmail",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/useredits": {
      "get": {
        "tags": [
          "UserEdit"
        ],
        "operationId": "GetProjectUserEdits",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserEdit"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "UserEdit"
        ],
        "operationId": "CreateUserEdit",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/useredits/{userEditId}": {
      "get": {
        "tags": [
          "UserEdit"
        ],
        "operationId": "GetUserEdit",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userEditId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserEdit"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "UserEdit"
        ],
        "operationId": "UpdateUserEditGoal",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userEditId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Edit"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Edit"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Edit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "UserEdit"
        ],
        "operationId": "UpdateUserEditStep",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userEditId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserEditStepWrapper"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserEditStepWrapper"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserEditStepWrapper"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "UserEdit"
        ],
        "operationId": "DeleteUserEdit",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userEditId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v1/projects/{projectId}/userroles": {
      "get": {
        "tags": [
          "UserRole"
        ],
        "operationId": "GetProjectUserRoles",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserRole"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "UserRole"
        ],
        "operationId": "DeleteProjectUserRoles",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "UserRole"
        ],
        "operationId": "CreateUserRole",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRole"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRole"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserRole"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/userroles/{userRoleId}": {
      "get": {
        "tags": [
          "UserRole"
        ],
        "operationId": "GetUserRole",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userRoleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRole"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/userroles/{userId}": {
      "delete": {
        "tags": [
          "UserRole"
        ],
        "operationId": "DeleteUserRole",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "UserRole"
        ],
        "operationId": "UpdateUserRolePermissions",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/words": {
      "delete": {
        "tags": [
          "Word"
        ],
        "operationId": "DeleteProjectWords",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Word"
        ],
        "operationId": "GetProjectWords",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Word"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Word"
        ],
        "operationId": "CreateWord",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Word"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Word"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Word"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/words/frontier/{wordId}": {
      "delete": {
        "tags": [
          "Word"
        ],
        "operationId": "DeleteFrontierWord",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "wordId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/words/{wordId}": {
      "get": {
        "tags": [
          "Word"
        ],
        "operationId": "GetWord",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "wordId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Word"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Word"
        ],
        "operationId": "UpdateWord",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "wordId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Word"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Word"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Word"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/words/isfrontiernonempty": {
      "get": {
        "tags": [
          "Word"
        ],
        "operationId": "IsFrontierNonempty",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/words/frontier": {
      "get": {
        "tags": [
          "Word"
        ],
        "operationId": "GetProjectFrontierWords",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Word"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/words/getduplicateid": {
      "post": {
        "tags": [
          "Word"
        ],
        "operationId": "GetDuplicateId",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Word"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Word"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Word"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{projectId}/words/{dupId}": {
      "post": {
        "tags": [
          "Word"
        ],
        "operationId": "UpdateDuplicate",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Word"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Word"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Word"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AutocompleteSetting": {
        "enum": [
          "Off",
          "On"
        ],
        "type": "string"
      },
      "BannerType": {
        "enum": [
          "None",
          "Login",
          "Announcement"
        ],
        "type": "string"
      },
      "ChartRootData": {
        "required": [
          "datasets",
          "dates"
        ],
        "type": "object",
        "properties": {
          "dates": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "datasets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Dataset"
            }
          }
        },
        "additionalProperties": false
      },
      "Credentials": {
        "required": [
          "password",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "minLength": 1,
            "type": "string"
          },
          "password": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CustomField": {
        "required": [
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Dataset": {
        "required": [
          "data",
          "userName"
        ],
        "type": "object",
        "properties": {
          "userName": {
            "minLength": 1,
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "additionalProperties": false
      },
      "Definition": {
        "required": [
          "language",
          "text"
        ],
        "type": "object",
        "properties": {
          "language": {
            "minLength": 1,
            "type": "string"
          },
          "text": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Edit": {
        "required": [
          "changes",
          "goalType",
          "guid",
          "stepData"
        ],
        "type": "object",
        "properties": {
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "goalType": {
            "type": "integer",
            "format": "int32"
          },
          "stepData": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "changes": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "EmailInvite": {
        "required": [
          "email",
          "expireTime",
          "token"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string"
          },
          "token": {
            "minLength": 1,
            "type": "string"
          },
          "expireTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "EmailInviteData": {
        "required": [
          "domain",
          "emailAddress",
          "message",
          "projectId"
        ],
        "type": "object",
        "properties": {
          "emailAddress": {
            "minLength": 1,
            "type": "string"
          },
          "message": {
            "minLength": 1,
            "type": "string"
          },
          "projectId": {
            "minLength": 1,
            "type": "string"
          },
          "domain": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "EmailInviteStatus": {
        "required": [
          "isTokenValid",
          "isUserRegistered"
        ],
        "type": "object",
        "properties": {
          "isTokenValid": {
            "type": "boolean"
          },
          "isUserRegistered": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Flag": {
        "required": [
          "active",
          "text"
        ],
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "text": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Gloss": {
        "required": [
          "def",
          "language"
        ],
        "type": "object",
        "properties": {
          "language": {
            "minLength": 1,
            "type": "string"
          },
          "def": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "MergeSourceWord": {
        "required": [
          "getAudio",
          "srcWordId"
        ],
        "type": "object",
        "properties": {
          "srcWordId": {
            "minLength": 1,
            "type": "string"
          },
          "getAudio": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "MergeUndoIds": {
        "required": [
          "childIds",
          "parentIds"
        ],
        "type": "object",
        "properties": {
          "parentIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "childIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "MergeWords": {
        "required": [
          "children",
          "deleteOnly",
          "parent"
        ],
        "type": "object",
        "properties": {
          "parent": {
            "$ref": "#/components/schemas/Word"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MergeSourceWord"
            }
          },
          "deleteOnly": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Note": {
        "required": [
          "language",
          "text"
        ],
        "type": "object",
        "properties": {
          "language": {
            "minLength": 1,
            "type": "string"
          },
          "text": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PasswordResetData": {
        "required": [
          "newPassword",
          "token"
        ],
        "type": "object",
        "properties": {
          "newPassword": {
            "minLength": 1,
            "type": "string"
          },
          "token": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PasswordResetRequestData": {
        "required": [
          "domain",
          "emailOrUsername"
        ],
        "type": "object",
        "properties": {
          "domain": {
            "minLength": 1,
            "type": "string"
          },
          "emailOrUsername": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Permission": {
        "enum": [
          "WordEntry",
          "MergeAndReviewEntries",
          "ImportExport",
          "DeleteEditSettingsAndUsers",
          "Owner"
        ],
        "type": "string"
      },
      "Project": {
        "required": [
          "analysisWritingSystems",
          "autocompleteSetting",
          "definitionsEnabled",
          "id",
          "inviteTokens",
          "isActive",
          "liftImported",
          "name",
          "rejectedCharacters",
          "semanticDomains",
          "semDomWritingSystem",
          "validCharacters",
          "vernacularWritingSystem"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "liftImported": {
            "type": "boolean"
          },
          "definitionsEnabled": {
            "type": "boolean"
          },
          "autocompleteSetting": {
            "$ref": "#/components/schemas/AutocompleteSetting"
          },
          "semDomWritingSystem": {
            "$ref": "#/components/schemas/WritingSystem"
          },
          "vernacularWritingSystem": {
            "$ref": "#/components/schemas/WritingSystem"
          },
          "analysisWritingSystems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WritingSystem"
            }
          },
          "semanticDomains": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SemanticDomain"
            }
          },
          "validCharacters": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "rejectedCharacters": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomField"
            },
            "nullable": true
          },
          "wordFields": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "partsOfSpeech": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "inviteTokens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmailInvite"
            }
          },
          "workshopSchedule": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SemanticDomain": {
        "required": [
          "guid",
          "id",
          "lang",
          "name"
        ],
        "type": "object",
        "properties": {
          "mongoId": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "lang": {
            "minLength": 1,
            "type": "string"
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SemanticDomainCount": {
        "required": [
          "count",
          "semanticDomainTreeNode"
        ],
        "type": "object",
        "properties": {
          "semanticDomainTreeNode": {
            "$ref": "#/components/schemas/SemanticDomainTreeNode"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SemanticDomainFull": {
        "required": [
          "description",
          "guid",
          "id",
          "lang",
          "name",
          "questions"
        ],
        "type": "object",
        "properties": {
          "mongoId": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "lang": {
            "minLength": 1,
            "type": "string"
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "minLength": 1,
            "type": "string"
          },
          "questions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "SemanticDomainTreeNode": {
        "required": [
          "children",
          "guid",
          "id",
          "lang",
          "name"
        ],
        "type": "object",
        "properties": {
          "mongoId": {
            "type": "string",
            "nullable": true
          },
          "lang": {
            "minLength": 1,
            "type": "string"
          },
          "guid": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "previous": {
            "$ref": "#/components/schemas/SemanticDomain"
          },
          "next": {
            "$ref": "#/components/schemas/SemanticDomain"
          },
          "parent": {
            "$ref": "#/components/schemas/SemanticDomain"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SemanticDomain"
            }
          }
        },
        "additionalProperties": false
      },
      "SemanticDomainUserCount": {
        "required": [
          "domainSet",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "domainSet": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "domainCount": {
            "type": "integer",
            "format": "int32"
          },
          "wordCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Sense": {
        "required": [
          "accessibility",
          "definitions",
          "glosses",
          "guid",
          "semanticDomains"
        ],
        "type": "object",
        "properties": {
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "definitions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Definition"
            }
          },
          "glosses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Gloss"
            }
          },
          "semanticDomains": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SemanticDomain"
            }
          },
          "accessibility": {
            "$ref": "#/components/schemas/Status"
          }
        },
        "additionalProperties": false
      },
      "SiteBanner": {
        "required": [
          "text",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/BannerType"
          },
          "text": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Status": {
        "enum": [
          "Active",
          "Deleted",
          "Duplicate",
          "Protected",
          "Separate"
        ],
        "type": "string"
      },
      "User": {
        "required": [
          "avatar",
          "email",
          "hasAvatar",
          "id",
          "isAdmin",
          "name",
          "password",
          "phone",
          "projectRoles",
          "token",
          "username",
          "workedProjects"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "avatar": {
            "minLength": 1,
            "type": "string"
          },
          "hasAvatar": {
            "type": "boolean"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "email": {
            "minLength": 1,
            "type": "string"
          },
          "phone": {
            "minLength": 1,
            "type": "string"
          },
          "otherConnectionField": {
            "type": "string",
            "nullable": true
          },
          "workedProjects": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "projectRoles": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "agreement": {
            "type": "boolean"
          },
          "password": {
            "minLength": 1,
            "type": "string"
          },
          "username": {
            "minLength": 1,
            "type": "string"
          },
          "uiLang": {
            "type": "string",
            "nullable": true
          },
          "token": {
            "minLength": 1,
            "type": "string"
          },
          "isAdmin": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UserCreatedProject": {
        "required": [
          "project",
          "user"
        ],
        "type": "object",
        "properties": {
          "project": {
            "$ref": "#/components/schemas/Project"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "additionalProperties": false
      },
      "UserEdit": {
        "required": [
          "edits",
          "id",
          "projectId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "edits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Edit"
            }
          },
          "projectId": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UserEditStepWrapper": {
        "required": [
          "goalIndex",
          "stepString"
        ],
        "type": "object",
        "properties": {
          "goalIndex": {
            "type": "integer",
            "format": "int32"
          },
          "stepString": {
            "minLength": 1,
            "type": "string"
          },
          "stepIndex": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserRole": {
        "required": [
          "id",
          "permissions",
          "projectId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Permission"
            }
          },
          "projectId": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Word": {
        "required": [
          "accessibility",
          "audio",
          "created",
          "flag",
          "guid",
          "history",
          "id",
          "modified",
          "note",
          "projectId",
          "senses",
          "vernacular"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "vernacular": {
            "minLength": 1,
            "type": "string"
          },
          "plural": {
            "type": "string",
            "nullable": true
          },
          "senses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sense"
            }
          },
          "audio": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "created": {
            "minLength": 1,
            "type": "string"
          },
          "modified": {
            "minLength": 1,
            "type": "string"
          },
          "accessibility": {
            "$ref": "#/components/schemas/Status"
          },
          "history": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "partOfSpeech": {
            "type": "string",
            "nullable": true
          },
          "editedBy": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "otherField": {
            "type": "string",
            "nullable": true
          },
          "projectId": {
            "minLength": 1,
            "type": "string"
          },
          "note": {
            "$ref": "#/components/schemas/Note"
          },
          "flag": {
            "$ref": "#/components/schemas/Flag"
          }
        },
        "additionalProperties": false
      },
      "WordsPerDayPerUserCount": {
        "required": [
          "dateTime",
          "userNameCountDictionary"
        ],
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "format": "date-time"
          },
          "userNameCountDictionary": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "additionalProperties": false
      },
      "WritingSystem": {
        "required": [
          "bcp47",
          "font",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "bcp47": {
            "minLength": 1,
            "type": "string"
          },
          "font": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    }
  }
}